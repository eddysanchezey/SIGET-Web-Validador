//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WEB_APP.ServiceReference1 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.WSSoap")]
    public interface WSSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetornarAcceso", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RetornarAcceso(string correo, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RetornarAcceso", ReplyAction="*")]
        System.IAsyncResult BeginRetornarAcceso(string correo, string contraseña, System.AsyncCallback callback, object asyncState);
        
        string EndRetornarAcceso(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RetornarRol", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int RetornarRol(string correo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RetornarRol", ReplyAction="*")]
        System.IAsyncResult BeginRetornarRol(string correo, System.AsyncCallback callback, object asyncState);
        
        int EndRetornarRol(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizarCombox", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void ActualizarCombox(string abc, string consulta);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ActualizarCombox", ReplyAction="*")]
        System.IAsyncResult BeginActualizarCombox(string abc, string consulta, System.AsyncCallback callback, object asyncState);
        
        void EndActualizarCombox(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState);
        
        string EndHelloWorld(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConsultarEstado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ConsultarEstado(string codigo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ConsultarEstado", ReplyAction="*")]
        System.IAsyncResult BeginConsultarEstado(string codigo, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndConsultarEstado(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LLenarListaGerente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LLenarListaGerente();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LLenarListaGerente", ReplyAction="*")]
        System.IAsyncResult BeginLLenarListaGerente(System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndLLenarListaGerente(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LLenarListaJob", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet LLenarListaJob(string Nomb_Gerente);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/LLenarListaJob", ReplyAction="*")]
        System.IAsyncResult BeginLLenarListaJob(string Nomb_Gerente, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndLLenarListaJob(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Subserviceline", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Subserviceline(int Job);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Subserviceline", ReplyAction="*")]
        System.IAsyncResult BeginSubserviceline(int Job, System.AsyncCallback callback, object asyncState);
        
        string EndSubserviceline(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RegistroTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RegistroTicket(string Area, int Job, string Gerente, string Senior, System.DateTime Fecha_registro, System.DateTime Fecha_prevista);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RegistroTicket", ReplyAction="*")]
        System.IAsyncResult BeginRegistroTicket(string Area, int Job, string Gerente, string Senior, System.DateTime Fecha_registro, System.DateTime Fecha_prevista, System.AsyncCallback callback, object asyncState);
        
        string EndRegistroTicket(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RegistroTicket_v2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string RegistroTicket_v2(
                    string Area, 
                    int Job, 
                    string Gerente, 
                    string Senior, 
                    System.DateTime Fecha_registro, 
                    System.DateTime Fecha_prevista, 
                    string LEM_Prueba_compras, 
                    string LEM_Tablero_compras, 
                    string LEM_Prueba_ventas, 
                    string LEM_Tablero_ventas, 
                    string LEM_Prueba_diario, 
                    string LEM_Tablero_diario, 
                    string LEA_Prueba_activofijo, 
                    string LEA_Tablero_activofijo, 
                    string LEA_Prueba_kardex, 
                    string LEA_Tablero_kardex, 
                    string LEA_Prueba_inventariobalance, 
                    string LEA_Tablero_inventariobalance, 
                    string LEA_Prueba_costos, 
                    string LEA_Tablero_costos, 
                    string RDJ_Prueba_kardex, 
                    string RDJ_Tablero_kardex, 
                    string RDJ_Prueba_compras, 
                    string RDJ_Tablero_compras, 
                    string RDJ_Prueba_diario5_1, 
                    string RDJ_Tablero_diario5_1, 
                    string RDJ_Prueba_diario5_3, 
                    string RDJ_Tablero_diario5_3, 
                    string PC_ingresar, 
                    string LEA_Prueba_kardex_adic, 
                    string LEA_Tablero_kardex_adic, 
                    string RDJ_eficiencia, 
                    string RDJ_extendido, 
                    string XML, 
                    string XML_compras, 
                    string XML_ventas, 
                    string Cruce_FV_LE, 
                    string SIAF);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RegistroTicket_v2", ReplyAction="*")]
        System.IAsyncResult BeginRegistroTicket_v2(
                    string Area, 
                    int Job, 
                    string Gerente, 
                    string Senior, 
                    System.DateTime Fecha_registro, 
                    System.DateTime Fecha_prevista, 
                    string LEM_Prueba_compras, 
                    string LEM_Tablero_compras, 
                    string LEM_Prueba_ventas, 
                    string LEM_Tablero_ventas, 
                    string LEM_Prueba_diario, 
                    string LEM_Tablero_diario, 
                    string LEA_Prueba_activofijo, 
                    string LEA_Tablero_activofijo, 
                    string LEA_Prueba_kardex, 
                    string LEA_Tablero_kardex, 
                    string LEA_Prueba_inventariobalance, 
                    string LEA_Tablero_inventariobalance, 
                    string LEA_Prueba_costos, 
                    string LEA_Tablero_costos, 
                    string RDJ_Prueba_kardex, 
                    string RDJ_Tablero_kardex, 
                    string RDJ_Prueba_compras, 
                    string RDJ_Tablero_compras, 
                    string RDJ_Prueba_diario5_1, 
                    string RDJ_Tablero_diario5_1, 
                    string RDJ_Prueba_diario5_3, 
                    string RDJ_Tablero_diario5_3, 
                    string PC_ingresar, 
                    string LEA_Prueba_kardex_adic, 
                    string LEA_Tablero_kardex_adic, 
                    string RDJ_eficiencia, 
                    string RDJ_extendido, 
                    string XML, 
                    string XML_compras, 
                    string XML_ventas, 
                    string Cruce_FV_LE, 
                    string SIAF, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndRegistroTicket_v2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Fecha_fin_ult_ticket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime Fecha_fin_ult_ticket();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/Fecha_fin_ult_ticket", ReplyAction="*")]
        System.IAsyncResult BeginFecha_fin_ult_ticket(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndFecha_fin_ult_ticket(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TicketProcesando", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string TicketProcesando();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/TicketProcesando", ReplyAction="*")]
        System.IAsyncResult BeginTicketProcesando(System.AsyncCallback callback, object asyncState);
        
        string EndTicketProcesando(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NumeroTicketsProcesando", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string NumeroTicketsProcesando();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/NumeroTicketsProcesando", ReplyAction="*")]
        System.IAsyncResult BeginNumeroTicketsProcesando(System.AsyncCallback callback, object asyncState);
        
        string EndNumeroTicketsProcesando(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EditarEstado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void EditarEstado(string CodigoTicket, string Estado, System.DateTime FechaPrevista);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/EditarEstado", ReplyAction="*")]
        System.IAsyncResult BeginEditarEstado(string CodigoTicket, string Estado, System.DateTime FechaPrevista, System.AsyncCallback callback, object asyncState);
        
        void EndEditarEstado(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerificarCodigo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int VerificarCodigo(string codigo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/VerificarCodigo", ReplyAction="*")]
        System.IAsyncResult BeginVerificarCodigo(string codigo, System.AsyncCallback callback, object asyncState);
        
        int EndVerificarCodigo(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WSSoapChannel : WEB_APP.ServiceReference1.WSSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetornarAccesoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetornarAccesoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetornarRolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetornarRolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConsultarEstadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConsultarEstadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LLenarListaGerenteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LLenarListaGerenteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LLenarListaJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LLenarListaJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubservicelineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SubservicelineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegistroTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegistroTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegistroTicket_v2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegistroTicket_v2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Fecha_fin_ult_ticketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Fecha_fin_ult_ticketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TicketProcesandoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TicketProcesandoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NumeroTicketsProcesandoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NumeroTicketsProcesandoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VerificarCodigoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public VerificarCodigoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSSoapClient : System.ServiceModel.ClientBase<WEB_APP.ServiceReference1.WSSoap>, WEB_APP.ServiceReference1.WSSoap {
        
        private BeginOperationDelegate onBeginRetornarAccesoDelegate;
        
        private EndOperationDelegate onEndRetornarAccesoDelegate;
        
        private System.Threading.SendOrPostCallback onRetornarAccesoCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetornarRolDelegate;
        
        private EndOperationDelegate onEndRetornarRolDelegate;
        
        private System.Threading.SendOrPostCallback onRetornarRolCompletedDelegate;
        
        private BeginOperationDelegate onBeginActualizarComboxDelegate;
        
        private EndOperationDelegate onEndActualizarComboxDelegate;
        
        private System.Threading.SendOrPostCallback onActualizarComboxCompletedDelegate;
        
        private BeginOperationDelegate onBeginHelloWorldDelegate;
        
        private EndOperationDelegate onEndHelloWorldDelegate;
        
        private System.Threading.SendOrPostCallback onHelloWorldCompletedDelegate;
        
        private BeginOperationDelegate onBeginConsultarEstadoDelegate;
        
        private EndOperationDelegate onEndConsultarEstadoDelegate;
        
        private System.Threading.SendOrPostCallback onConsultarEstadoCompletedDelegate;
        
        private BeginOperationDelegate onBeginLLenarListaGerenteDelegate;
        
        private EndOperationDelegate onEndLLenarListaGerenteDelegate;
        
        private System.Threading.SendOrPostCallback onLLenarListaGerenteCompletedDelegate;
        
        private BeginOperationDelegate onBeginLLenarListaJobDelegate;
        
        private EndOperationDelegate onEndLLenarListaJobDelegate;
        
        private System.Threading.SendOrPostCallback onLLenarListaJobCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubservicelineDelegate;
        
        private EndOperationDelegate onEndSubservicelineDelegate;
        
        private System.Threading.SendOrPostCallback onSubservicelineCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegistroTicketDelegate;
        
        private EndOperationDelegate onEndRegistroTicketDelegate;
        
        private System.Threading.SendOrPostCallback onRegistroTicketCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegistroTicket_v2Delegate;
        
        private EndOperationDelegate onEndRegistroTicket_v2Delegate;
        
        private System.Threading.SendOrPostCallback onRegistroTicket_v2CompletedDelegate;
        
        private BeginOperationDelegate onBeginFecha_fin_ult_ticketDelegate;
        
        private EndOperationDelegate onEndFecha_fin_ult_ticketDelegate;
        
        private System.Threading.SendOrPostCallback onFecha_fin_ult_ticketCompletedDelegate;
        
        private BeginOperationDelegate onBeginTicketProcesandoDelegate;
        
        private EndOperationDelegate onEndTicketProcesandoDelegate;
        
        private System.Threading.SendOrPostCallback onTicketProcesandoCompletedDelegate;
        
        private BeginOperationDelegate onBeginNumeroTicketsProcesandoDelegate;
        
        private EndOperationDelegate onEndNumeroTicketsProcesandoDelegate;
        
        private System.Threading.SendOrPostCallback onNumeroTicketsProcesandoCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditarEstadoDelegate;
        
        private EndOperationDelegate onEndEditarEstadoDelegate;
        
        private System.Threading.SendOrPostCallback onEditarEstadoCompletedDelegate;
        
        private BeginOperationDelegate onBeginVerificarCodigoDelegate;
        
        private EndOperationDelegate onEndVerificarCodigoDelegate;
        
        private System.Threading.SendOrPostCallback onVerificarCodigoCompletedDelegate;
        
        public WSSoapClient() {
        }
        
        public WSSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<RetornarAccesoCompletedEventArgs> RetornarAccesoCompleted;
        
        public event System.EventHandler<RetornarRolCompletedEventArgs> RetornarRolCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ActualizarComboxCompleted;
        
        public event System.EventHandler<HelloWorldCompletedEventArgs> HelloWorldCompleted;
        
        public event System.EventHandler<ConsultarEstadoCompletedEventArgs> ConsultarEstadoCompleted;
        
        public event System.EventHandler<LLenarListaGerenteCompletedEventArgs> LLenarListaGerenteCompleted;
        
        public event System.EventHandler<LLenarListaJobCompletedEventArgs> LLenarListaJobCompleted;
        
        public event System.EventHandler<SubservicelineCompletedEventArgs> SubservicelineCompleted;
        
        public event System.EventHandler<RegistroTicketCompletedEventArgs> RegistroTicketCompleted;
        
        public event System.EventHandler<RegistroTicket_v2CompletedEventArgs> RegistroTicket_v2Completed;
        
        public event System.EventHandler<Fecha_fin_ult_ticketCompletedEventArgs> Fecha_fin_ult_ticketCompleted;
        
        public event System.EventHandler<TicketProcesandoCompletedEventArgs> TicketProcesandoCompleted;
        
        public event System.EventHandler<NumeroTicketsProcesandoCompletedEventArgs> NumeroTicketsProcesandoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> EditarEstadoCompleted;
        
        public event System.EventHandler<VerificarCodigoCompletedEventArgs> VerificarCodigoCompleted;
        
        public string RetornarAcceso(string correo, string contraseña) {
            return base.Channel.RetornarAcceso(correo, contraseña);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRetornarAcceso(string correo, string contraseña, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetornarAcceso(correo, contraseña, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndRetornarAcceso(System.IAsyncResult result) {
            return base.Channel.EndRetornarAcceso(result);
        }
        
        private System.IAsyncResult OnBeginRetornarAcceso(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string correo = ((string)(inValues[0]));
            string contraseña = ((string)(inValues[1]));
            return this.BeginRetornarAcceso(correo, contraseña, callback, asyncState);
        }
        
        private object[] OnEndRetornarAcceso(System.IAsyncResult result) {
            string retVal = this.EndRetornarAcceso(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetornarAccesoCompleted(object state) {
            if ((this.RetornarAccesoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetornarAccesoCompleted(this, new RetornarAccesoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetornarAccesoAsync(string correo, string contraseña) {
            this.RetornarAccesoAsync(correo, contraseña, null);
        }
        
        public void RetornarAccesoAsync(string correo, string contraseña, object userState) {
            if ((this.onBeginRetornarAccesoDelegate == null)) {
                this.onBeginRetornarAccesoDelegate = new BeginOperationDelegate(this.OnBeginRetornarAcceso);
            }
            if ((this.onEndRetornarAccesoDelegate == null)) {
                this.onEndRetornarAccesoDelegate = new EndOperationDelegate(this.OnEndRetornarAcceso);
            }
            if ((this.onRetornarAccesoCompletedDelegate == null)) {
                this.onRetornarAccesoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetornarAccesoCompleted);
            }
            base.InvokeAsync(this.onBeginRetornarAccesoDelegate, new object[] {
                        correo,
                        contraseña}, this.onEndRetornarAccesoDelegate, this.onRetornarAccesoCompletedDelegate, userState);
        }
        
        public int RetornarRol(string correo) {
            return base.Channel.RetornarRol(correo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRetornarRol(string correo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetornarRol(correo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndRetornarRol(System.IAsyncResult result) {
            return base.Channel.EndRetornarRol(result);
        }
        
        private System.IAsyncResult OnBeginRetornarRol(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string correo = ((string)(inValues[0]));
            return this.BeginRetornarRol(correo, callback, asyncState);
        }
        
        private object[] OnEndRetornarRol(System.IAsyncResult result) {
            int retVal = this.EndRetornarRol(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetornarRolCompleted(object state) {
            if ((this.RetornarRolCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetornarRolCompleted(this, new RetornarRolCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetornarRolAsync(string correo) {
            this.RetornarRolAsync(correo, null);
        }
        
        public void RetornarRolAsync(string correo, object userState) {
            if ((this.onBeginRetornarRolDelegate == null)) {
                this.onBeginRetornarRolDelegate = new BeginOperationDelegate(this.OnBeginRetornarRol);
            }
            if ((this.onEndRetornarRolDelegate == null)) {
                this.onEndRetornarRolDelegate = new EndOperationDelegate(this.OnEndRetornarRol);
            }
            if ((this.onRetornarRolCompletedDelegate == null)) {
                this.onRetornarRolCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetornarRolCompleted);
            }
            base.InvokeAsync(this.onBeginRetornarRolDelegate, new object[] {
                        correo}, this.onEndRetornarRolDelegate, this.onRetornarRolCompletedDelegate, userState);
        }
        
        public void ActualizarCombox(string abc, string consulta) {
            base.Channel.ActualizarCombox(abc, consulta);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginActualizarCombox(string abc, string consulta, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActualizarCombox(abc, consulta, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndActualizarCombox(System.IAsyncResult result) {
            base.Channel.EndActualizarCombox(result);
        }
        
        private System.IAsyncResult OnBeginActualizarCombox(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string abc = ((string)(inValues[0]));
            string consulta = ((string)(inValues[1]));
            return this.BeginActualizarCombox(abc, consulta, callback, asyncState);
        }
        
        private object[] OnEndActualizarCombox(System.IAsyncResult result) {
            this.EndActualizarCombox(result);
            return null;
        }
        
        private void OnActualizarComboxCompleted(object state) {
            if ((this.ActualizarComboxCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActualizarComboxCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActualizarComboxAsync(string abc, string consulta) {
            this.ActualizarComboxAsync(abc, consulta, null);
        }
        
        public void ActualizarComboxAsync(string abc, string consulta, object userState) {
            if ((this.onBeginActualizarComboxDelegate == null)) {
                this.onBeginActualizarComboxDelegate = new BeginOperationDelegate(this.OnBeginActualizarCombox);
            }
            if ((this.onEndActualizarComboxDelegate == null)) {
                this.onEndActualizarComboxDelegate = new EndOperationDelegate(this.OnEndActualizarCombox);
            }
            if ((this.onActualizarComboxCompletedDelegate == null)) {
                this.onActualizarComboxCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActualizarComboxCompleted);
            }
            base.InvokeAsync(this.onBeginActualizarComboxDelegate, new object[] {
                        abc,
                        consulta}, this.onEndActualizarComboxDelegate, this.onActualizarComboxCompletedDelegate, userState);
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHelloWorld(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndHelloWorld(System.IAsyncResult result) {
            return base.Channel.EndHelloWorld(result);
        }
        
        private System.IAsyncResult OnBeginHelloWorld(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginHelloWorld(callback, asyncState);
        }
        
        private object[] OnEndHelloWorld(System.IAsyncResult result) {
            string retVal = this.EndHelloWorld(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHelloWorldCompleted(object state) {
            if ((this.HelloWorldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        public void HelloWorldAsync(object userState) {
            if ((this.onBeginHelloWorldDelegate == null)) {
                this.onBeginHelloWorldDelegate = new BeginOperationDelegate(this.OnBeginHelloWorld);
            }
            if ((this.onEndHelloWorldDelegate == null)) {
                this.onEndHelloWorldDelegate = new EndOperationDelegate(this.OnEndHelloWorld);
            }
            if ((this.onHelloWorldCompletedDelegate == null)) {
                this.onHelloWorldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHelloWorldCompleted);
            }
            base.InvokeAsync(this.onBeginHelloWorldDelegate, null, this.onEndHelloWorldDelegate, this.onHelloWorldCompletedDelegate, userState);
        }
        
        public System.Data.DataSet ConsultarEstado(string codigo) {
            return base.Channel.ConsultarEstado(codigo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConsultarEstado(string codigo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConsultarEstado(codigo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndConsultarEstado(System.IAsyncResult result) {
            return base.Channel.EndConsultarEstado(result);
        }
        
        private System.IAsyncResult OnBeginConsultarEstado(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string codigo = ((string)(inValues[0]));
            return this.BeginConsultarEstado(codigo, callback, asyncState);
        }
        
        private object[] OnEndConsultarEstado(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndConsultarEstado(result);
            return new object[] {
                    retVal};
        }
        
        private void OnConsultarEstadoCompleted(object state) {
            if ((this.ConsultarEstadoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConsultarEstadoCompleted(this, new ConsultarEstadoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConsultarEstadoAsync(string codigo) {
            this.ConsultarEstadoAsync(codigo, null);
        }
        
        public void ConsultarEstadoAsync(string codigo, object userState) {
            if ((this.onBeginConsultarEstadoDelegate == null)) {
                this.onBeginConsultarEstadoDelegate = new BeginOperationDelegate(this.OnBeginConsultarEstado);
            }
            if ((this.onEndConsultarEstadoDelegate == null)) {
                this.onEndConsultarEstadoDelegate = new EndOperationDelegate(this.OnEndConsultarEstado);
            }
            if ((this.onConsultarEstadoCompletedDelegate == null)) {
                this.onConsultarEstadoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConsultarEstadoCompleted);
            }
            base.InvokeAsync(this.onBeginConsultarEstadoDelegate, new object[] {
                        codigo}, this.onEndConsultarEstadoDelegate, this.onConsultarEstadoCompletedDelegate, userState);
        }
        
        public System.Data.DataSet LLenarListaGerente() {
            return base.Channel.LLenarListaGerente();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLLenarListaGerente(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLLenarListaGerente(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndLLenarListaGerente(System.IAsyncResult result) {
            return base.Channel.EndLLenarListaGerente(result);
        }
        
        private System.IAsyncResult OnBeginLLenarListaGerente(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLLenarListaGerente(callback, asyncState);
        }
        
        private object[] OnEndLLenarListaGerente(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndLLenarListaGerente(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLLenarListaGerenteCompleted(object state) {
            if ((this.LLenarListaGerenteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LLenarListaGerenteCompleted(this, new LLenarListaGerenteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LLenarListaGerenteAsync() {
            this.LLenarListaGerenteAsync(null);
        }
        
        public void LLenarListaGerenteAsync(object userState) {
            if ((this.onBeginLLenarListaGerenteDelegate == null)) {
                this.onBeginLLenarListaGerenteDelegate = new BeginOperationDelegate(this.OnBeginLLenarListaGerente);
            }
            if ((this.onEndLLenarListaGerenteDelegate == null)) {
                this.onEndLLenarListaGerenteDelegate = new EndOperationDelegate(this.OnEndLLenarListaGerente);
            }
            if ((this.onLLenarListaGerenteCompletedDelegate == null)) {
                this.onLLenarListaGerenteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLLenarListaGerenteCompleted);
            }
            base.InvokeAsync(this.onBeginLLenarListaGerenteDelegate, null, this.onEndLLenarListaGerenteDelegate, this.onLLenarListaGerenteCompletedDelegate, userState);
        }
        
        public System.Data.DataSet LLenarListaJob(string Nomb_Gerente) {
            return base.Channel.LLenarListaJob(Nomb_Gerente);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLLenarListaJob(string Nomb_Gerente, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLLenarListaJob(Nomb_Gerente, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndLLenarListaJob(System.IAsyncResult result) {
            return base.Channel.EndLLenarListaJob(result);
        }
        
        private System.IAsyncResult OnBeginLLenarListaJob(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Nomb_Gerente = ((string)(inValues[0]));
            return this.BeginLLenarListaJob(Nomb_Gerente, callback, asyncState);
        }
        
        private object[] OnEndLLenarListaJob(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndLLenarListaJob(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLLenarListaJobCompleted(object state) {
            if ((this.LLenarListaJobCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LLenarListaJobCompleted(this, new LLenarListaJobCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LLenarListaJobAsync(string Nomb_Gerente) {
            this.LLenarListaJobAsync(Nomb_Gerente, null);
        }
        
        public void LLenarListaJobAsync(string Nomb_Gerente, object userState) {
            if ((this.onBeginLLenarListaJobDelegate == null)) {
                this.onBeginLLenarListaJobDelegate = new BeginOperationDelegate(this.OnBeginLLenarListaJob);
            }
            if ((this.onEndLLenarListaJobDelegate == null)) {
                this.onEndLLenarListaJobDelegate = new EndOperationDelegate(this.OnEndLLenarListaJob);
            }
            if ((this.onLLenarListaJobCompletedDelegate == null)) {
                this.onLLenarListaJobCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLLenarListaJobCompleted);
            }
            base.InvokeAsync(this.onBeginLLenarListaJobDelegate, new object[] {
                        Nomb_Gerente}, this.onEndLLenarListaJobDelegate, this.onLLenarListaJobCompletedDelegate, userState);
        }
        
        public string Subserviceline(int Job) {
            return base.Channel.Subserviceline(Job);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSubserviceline(int Job, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubserviceline(Job, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndSubserviceline(System.IAsyncResult result) {
            return base.Channel.EndSubserviceline(result);
        }
        
        private System.IAsyncResult OnBeginSubserviceline(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Job = ((int)(inValues[0]));
            return this.BeginSubserviceline(Job, callback, asyncState);
        }
        
        private object[] OnEndSubserviceline(System.IAsyncResult result) {
            string retVal = this.EndSubserviceline(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSubservicelineCompleted(object state) {
            if ((this.SubservicelineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubservicelineCompleted(this, new SubservicelineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubservicelineAsync(int Job) {
            this.SubservicelineAsync(Job, null);
        }
        
        public void SubservicelineAsync(int Job, object userState) {
            if ((this.onBeginSubservicelineDelegate == null)) {
                this.onBeginSubservicelineDelegate = new BeginOperationDelegate(this.OnBeginSubserviceline);
            }
            if ((this.onEndSubservicelineDelegate == null)) {
                this.onEndSubservicelineDelegate = new EndOperationDelegate(this.OnEndSubserviceline);
            }
            if ((this.onSubservicelineCompletedDelegate == null)) {
                this.onSubservicelineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubservicelineCompleted);
            }
            base.InvokeAsync(this.onBeginSubservicelineDelegate, new object[] {
                        Job}, this.onEndSubservicelineDelegate, this.onSubservicelineCompletedDelegate, userState);
        }
        
        public string RegistroTicket(string Area, int Job, string Gerente, string Senior, System.DateTime Fecha_registro, System.DateTime Fecha_prevista) {
            return base.Channel.RegistroTicket(Area, Job, Gerente, Senior, Fecha_registro, Fecha_prevista);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRegistroTicket(string Area, int Job, string Gerente, string Senior, System.DateTime Fecha_registro, System.DateTime Fecha_prevista, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegistroTicket(Area, Job, Gerente, Senior, Fecha_registro, Fecha_prevista, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndRegistroTicket(System.IAsyncResult result) {
            return base.Channel.EndRegistroTicket(result);
        }
        
        private System.IAsyncResult OnBeginRegistroTicket(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Area = ((string)(inValues[0]));
            int Job = ((int)(inValues[1]));
            string Gerente = ((string)(inValues[2]));
            string Senior = ((string)(inValues[3]));
            System.DateTime Fecha_registro = ((System.DateTime)(inValues[4]));
            System.DateTime Fecha_prevista = ((System.DateTime)(inValues[5]));
            return this.BeginRegistroTicket(Area, Job, Gerente, Senior, Fecha_registro, Fecha_prevista, callback, asyncState);
        }
        
        private object[] OnEndRegistroTicket(System.IAsyncResult result) {
            string retVal = this.EndRegistroTicket(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegistroTicketCompleted(object state) {
            if ((this.RegistroTicketCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegistroTicketCompleted(this, new RegistroTicketCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegistroTicketAsync(string Area, int Job, string Gerente, string Senior, System.DateTime Fecha_registro, System.DateTime Fecha_prevista) {
            this.RegistroTicketAsync(Area, Job, Gerente, Senior, Fecha_registro, Fecha_prevista, null);
        }
        
        public void RegistroTicketAsync(string Area, int Job, string Gerente, string Senior, System.DateTime Fecha_registro, System.DateTime Fecha_prevista, object userState) {
            if ((this.onBeginRegistroTicketDelegate == null)) {
                this.onBeginRegistroTicketDelegate = new BeginOperationDelegate(this.OnBeginRegistroTicket);
            }
            if ((this.onEndRegistroTicketDelegate == null)) {
                this.onEndRegistroTicketDelegate = new EndOperationDelegate(this.OnEndRegistroTicket);
            }
            if ((this.onRegistroTicketCompletedDelegate == null)) {
                this.onRegistroTicketCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegistroTicketCompleted);
            }
            base.InvokeAsync(this.onBeginRegistroTicketDelegate, new object[] {
                        Area,
                        Job,
                        Gerente,
                        Senior,
                        Fecha_registro,
                        Fecha_prevista}, this.onEndRegistroTicketDelegate, this.onRegistroTicketCompletedDelegate, userState);
        }
        
        public string RegistroTicket_v2(
                    string Area, 
                    int Job, 
                    string Gerente, 
                    string Senior, 
                    System.DateTime Fecha_registro, 
                    System.DateTime Fecha_prevista, 
                    string LEM_Prueba_compras, 
                    string LEM_Tablero_compras, 
                    string LEM_Prueba_ventas, 
                    string LEM_Tablero_ventas, 
                    string LEM_Prueba_diario, 
                    string LEM_Tablero_diario, 
                    string LEA_Prueba_activofijo, 
                    string LEA_Tablero_activofijo, 
                    string LEA_Prueba_kardex, 
                    string LEA_Tablero_kardex, 
                    string LEA_Prueba_inventariobalance, 
                    string LEA_Tablero_inventariobalance, 
                    string LEA_Prueba_costos, 
                    string LEA_Tablero_costos, 
                    string RDJ_Prueba_kardex, 
                    string RDJ_Tablero_kardex, 
                    string RDJ_Prueba_compras, 
                    string RDJ_Tablero_compras, 
                    string RDJ_Prueba_diario5_1, 
                    string RDJ_Tablero_diario5_1, 
                    string RDJ_Prueba_diario5_3, 
                    string RDJ_Tablero_diario5_3, 
                    string PC_ingresar, 
                    string LEA_Prueba_kardex_adic, 
                    string LEA_Tablero_kardex_adic, 
                    string RDJ_eficiencia, 
                    string RDJ_extendido, 
                    string XML, 
                    string XML_compras, 
                    string XML_ventas, 
                    string Cruce_FV_LE, 
                    string SIAF) {
            return base.Channel.RegistroTicket_v2(Area, Job, Gerente, Senior, Fecha_registro, Fecha_prevista, LEM_Prueba_compras, LEM_Tablero_compras, LEM_Prueba_ventas, LEM_Tablero_ventas, LEM_Prueba_diario, LEM_Tablero_diario, LEA_Prueba_activofijo, LEA_Tablero_activofijo, LEA_Prueba_kardex, LEA_Tablero_kardex, LEA_Prueba_inventariobalance, LEA_Tablero_inventariobalance, LEA_Prueba_costos, LEA_Tablero_costos, RDJ_Prueba_kardex, RDJ_Tablero_kardex, RDJ_Prueba_compras, RDJ_Tablero_compras, RDJ_Prueba_diario5_1, RDJ_Tablero_diario5_1, RDJ_Prueba_diario5_3, RDJ_Tablero_diario5_3, PC_ingresar, LEA_Prueba_kardex_adic, LEA_Tablero_kardex_adic, RDJ_eficiencia, RDJ_extendido, XML, XML_compras, XML_ventas, Cruce_FV_LE, SIAF);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRegistroTicket_v2(
                    string Area, 
                    int Job, 
                    string Gerente, 
                    string Senior, 
                    System.DateTime Fecha_registro, 
                    System.DateTime Fecha_prevista, 
                    string LEM_Prueba_compras, 
                    string LEM_Tablero_compras, 
                    string LEM_Prueba_ventas, 
                    string LEM_Tablero_ventas, 
                    string LEM_Prueba_diario, 
                    string LEM_Tablero_diario, 
                    string LEA_Prueba_activofijo, 
                    string LEA_Tablero_activofijo, 
                    string LEA_Prueba_kardex, 
                    string LEA_Tablero_kardex, 
                    string LEA_Prueba_inventariobalance, 
                    string LEA_Tablero_inventariobalance, 
                    string LEA_Prueba_costos, 
                    string LEA_Tablero_costos, 
                    string RDJ_Prueba_kardex, 
                    string RDJ_Tablero_kardex, 
                    string RDJ_Prueba_compras, 
                    string RDJ_Tablero_compras, 
                    string RDJ_Prueba_diario5_1, 
                    string RDJ_Tablero_diario5_1, 
                    string RDJ_Prueba_diario5_3, 
                    string RDJ_Tablero_diario5_3, 
                    string PC_ingresar, 
                    string LEA_Prueba_kardex_adic, 
                    string LEA_Tablero_kardex_adic, 
                    string RDJ_eficiencia, 
                    string RDJ_extendido, 
                    string XML, 
                    string XML_compras, 
                    string XML_ventas, 
                    string Cruce_FV_LE, 
                    string SIAF, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginRegistroTicket_v2(Area, Job, Gerente, Senior, Fecha_registro, Fecha_prevista, LEM_Prueba_compras, LEM_Tablero_compras, LEM_Prueba_ventas, LEM_Tablero_ventas, LEM_Prueba_diario, LEM_Tablero_diario, LEA_Prueba_activofijo, LEA_Tablero_activofijo, LEA_Prueba_kardex, LEA_Tablero_kardex, LEA_Prueba_inventariobalance, LEA_Tablero_inventariobalance, LEA_Prueba_costos, LEA_Tablero_costos, RDJ_Prueba_kardex, RDJ_Tablero_kardex, RDJ_Prueba_compras, RDJ_Tablero_compras, RDJ_Prueba_diario5_1, RDJ_Tablero_diario5_1, RDJ_Prueba_diario5_3, RDJ_Tablero_diario5_3, PC_ingresar, LEA_Prueba_kardex_adic, LEA_Tablero_kardex_adic, RDJ_eficiencia, RDJ_extendido, XML, XML_compras, XML_ventas, Cruce_FV_LE, SIAF, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndRegistroTicket_v2(System.IAsyncResult result) {
            return base.Channel.EndRegistroTicket_v2(result);
        }
        
        private System.IAsyncResult OnBeginRegistroTicket_v2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Area = ((string)(inValues[0]));
            int Job = ((int)(inValues[1]));
            string Gerente = ((string)(inValues[2]));
            string Senior = ((string)(inValues[3]));
            System.DateTime Fecha_registro = ((System.DateTime)(inValues[4]));
            System.DateTime Fecha_prevista = ((System.DateTime)(inValues[5]));
            string LEM_Prueba_compras = ((string)(inValues[6]));
            string LEM_Tablero_compras = ((string)(inValues[7]));
            string LEM_Prueba_ventas = ((string)(inValues[8]));
            string LEM_Tablero_ventas = ((string)(inValues[9]));
            string LEM_Prueba_diario = ((string)(inValues[10]));
            string LEM_Tablero_diario = ((string)(inValues[11]));
            string LEA_Prueba_activofijo = ((string)(inValues[12]));
            string LEA_Tablero_activofijo = ((string)(inValues[13]));
            string LEA_Prueba_kardex = ((string)(inValues[14]));
            string LEA_Tablero_kardex = ((string)(inValues[15]));
            string LEA_Prueba_inventariobalance = ((string)(inValues[16]));
            string LEA_Tablero_inventariobalance = ((string)(inValues[17]));
            string LEA_Prueba_costos = ((string)(inValues[18]));
            string LEA_Tablero_costos = ((string)(inValues[19]));
            string RDJ_Prueba_kardex = ((string)(inValues[20]));
            string RDJ_Tablero_kardex = ((string)(inValues[21]));
            string RDJ_Prueba_compras = ((string)(inValues[22]));
            string RDJ_Tablero_compras = ((string)(inValues[23]));
            string RDJ_Prueba_diario5_1 = ((string)(inValues[24]));
            string RDJ_Tablero_diario5_1 = ((string)(inValues[25]));
            string RDJ_Prueba_diario5_3 = ((string)(inValues[26]));
            string RDJ_Tablero_diario5_3 = ((string)(inValues[27]));
            string PC_ingresar = ((string)(inValues[28]));
            string LEA_Prueba_kardex_adic = ((string)(inValues[29]));
            string LEA_Tablero_kardex_adic = ((string)(inValues[30]));
            string RDJ_eficiencia = ((string)(inValues[31]));
            string RDJ_extendido = ((string)(inValues[32]));
            string XML = ((string)(inValues[33]));
            string XML_compras = ((string)(inValues[34]));
            string XML_ventas = ((string)(inValues[35]));
            string Cruce_FV_LE = ((string)(inValues[36]));
            string SIAF = ((string)(inValues[37]));
            return this.BeginRegistroTicket_v2(Area, Job, Gerente, Senior, Fecha_registro, Fecha_prevista, LEM_Prueba_compras, LEM_Tablero_compras, LEM_Prueba_ventas, LEM_Tablero_ventas, LEM_Prueba_diario, LEM_Tablero_diario, LEA_Prueba_activofijo, LEA_Tablero_activofijo, LEA_Prueba_kardex, LEA_Tablero_kardex, LEA_Prueba_inventariobalance, LEA_Tablero_inventariobalance, LEA_Prueba_costos, LEA_Tablero_costos, RDJ_Prueba_kardex, RDJ_Tablero_kardex, RDJ_Prueba_compras, RDJ_Tablero_compras, RDJ_Prueba_diario5_1, RDJ_Tablero_diario5_1, RDJ_Prueba_diario5_3, RDJ_Tablero_diario5_3, PC_ingresar, LEA_Prueba_kardex_adic, LEA_Tablero_kardex_adic, RDJ_eficiencia, RDJ_extendido, XML, XML_compras, XML_ventas, Cruce_FV_LE, SIAF, callback, asyncState);
        }
        
        private object[] OnEndRegistroTicket_v2(System.IAsyncResult result) {
            string retVal = this.EndRegistroTicket_v2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegistroTicket_v2Completed(object state) {
            if ((this.RegistroTicket_v2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegistroTicket_v2Completed(this, new RegistroTicket_v2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegistroTicket_v2Async(
                    string Area, 
                    int Job, 
                    string Gerente, 
                    string Senior, 
                    System.DateTime Fecha_registro, 
                    System.DateTime Fecha_prevista, 
                    string LEM_Prueba_compras, 
                    string LEM_Tablero_compras, 
                    string LEM_Prueba_ventas, 
                    string LEM_Tablero_ventas, 
                    string LEM_Prueba_diario, 
                    string LEM_Tablero_diario, 
                    string LEA_Prueba_activofijo, 
                    string LEA_Tablero_activofijo, 
                    string LEA_Prueba_kardex, 
                    string LEA_Tablero_kardex, 
                    string LEA_Prueba_inventariobalance, 
                    string LEA_Tablero_inventariobalance, 
                    string LEA_Prueba_costos, 
                    string LEA_Tablero_costos, 
                    string RDJ_Prueba_kardex, 
                    string RDJ_Tablero_kardex, 
                    string RDJ_Prueba_compras, 
                    string RDJ_Tablero_compras, 
                    string RDJ_Prueba_diario5_1, 
                    string RDJ_Tablero_diario5_1, 
                    string RDJ_Prueba_diario5_3, 
                    string RDJ_Tablero_diario5_3, 
                    string PC_ingresar, 
                    string LEA_Prueba_kardex_adic, 
                    string LEA_Tablero_kardex_adic, 
                    string RDJ_eficiencia, 
                    string RDJ_extendido, 
                    string XML, 
                    string XML_compras, 
                    string XML_ventas, 
                    string Cruce_FV_LE, 
                    string SIAF) {
            this.RegistroTicket_v2Async(Area, Job, Gerente, Senior, Fecha_registro, Fecha_prevista, LEM_Prueba_compras, LEM_Tablero_compras, LEM_Prueba_ventas, LEM_Tablero_ventas, LEM_Prueba_diario, LEM_Tablero_diario, LEA_Prueba_activofijo, LEA_Tablero_activofijo, LEA_Prueba_kardex, LEA_Tablero_kardex, LEA_Prueba_inventariobalance, LEA_Tablero_inventariobalance, LEA_Prueba_costos, LEA_Tablero_costos, RDJ_Prueba_kardex, RDJ_Tablero_kardex, RDJ_Prueba_compras, RDJ_Tablero_compras, RDJ_Prueba_diario5_1, RDJ_Tablero_diario5_1, RDJ_Prueba_diario5_3, RDJ_Tablero_diario5_3, PC_ingresar, LEA_Prueba_kardex_adic, LEA_Tablero_kardex_adic, RDJ_eficiencia, RDJ_extendido, XML, XML_compras, XML_ventas, Cruce_FV_LE, SIAF, null);
        }
        
        public void RegistroTicket_v2Async(
                    string Area, 
                    int Job, 
                    string Gerente, 
                    string Senior, 
                    System.DateTime Fecha_registro, 
                    System.DateTime Fecha_prevista, 
                    string LEM_Prueba_compras, 
                    string LEM_Tablero_compras, 
                    string LEM_Prueba_ventas, 
                    string LEM_Tablero_ventas, 
                    string LEM_Prueba_diario, 
                    string LEM_Tablero_diario, 
                    string LEA_Prueba_activofijo, 
                    string LEA_Tablero_activofijo, 
                    string LEA_Prueba_kardex, 
                    string LEA_Tablero_kardex, 
                    string LEA_Prueba_inventariobalance, 
                    string LEA_Tablero_inventariobalance, 
                    string LEA_Prueba_costos, 
                    string LEA_Tablero_costos, 
                    string RDJ_Prueba_kardex, 
                    string RDJ_Tablero_kardex, 
                    string RDJ_Prueba_compras, 
                    string RDJ_Tablero_compras, 
                    string RDJ_Prueba_diario5_1, 
                    string RDJ_Tablero_diario5_1, 
                    string RDJ_Prueba_diario5_3, 
                    string RDJ_Tablero_diario5_3, 
                    string PC_ingresar, 
                    string LEA_Prueba_kardex_adic, 
                    string LEA_Tablero_kardex_adic, 
                    string RDJ_eficiencia, 
                    string RDJ_extendido, 
                    string XML, 
                    string XML_compras, 
                    string XML_ventas, 
                    string Cruce_FV_LE, 
                    string SIAF, 
                    object userState) {
            if ((this.onBeginRegistroTicket_v2Delegate == null)) {
                this.onBeginRegistroTicket_v2Delegate = new BeginOperationDelegate(this.OnBeginRegistroTicket_v2);
            }
            if ((this.onEndRegistroTicket_v2Delegate == null)) {
                this.onEndRegistroTicket_v2Delegate = new EndOperationDelegate(this.OnEndRegistroTicket_v2);
            }
            if ((this.onRegistroTicket_v2CompletedDelegate == null)) {
                this.onRegistroTicket_v2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegistroTicket_v2Completed);
            }
            base.InvokeAsync(this.onBeginRegistroTicket_v2Delegate, new object[] {
                        Area,
                        Job,
                        Gerente,
                        Senior,
                        Fecha_registro,
                        Fecha_prevista,
                        LEM_Prueba_compras,
                        LEM_Tablero_compras,
                        LEM_Prueba_ventas,
                        LEM_Tablero_ventas,
                        LEM_Prueba_diario,
                        LEM_Tablero_diario,
                        LEA_Prueba_activofijo,
                        LEA_Tablero_activofijo,
                        LEA_Prueba_kardex,
                        LEA_Tablero_kardex,
                        LEA_Prueba_inventariobalance,
                        LEA_Tablero_inventariobalance,
                        LEA_Prueba_costos,
                        LEA_Tablero_costos,
                        RDJ_Prueba_kardex,
                        RDJ_Tablero_kardex,
                        RDJ_Prueba_compras,
                        RDJ_Tablero_compras,
                        RDJ_Prueba_diario5_1,
                        RDJ_Tablero_diario5_1,
                        RDJ_Prueba_diario5_3,
                        RDJ_Tablero_diario5_3,
                        PC_ingresar,
                        LEA_Prueba_kardex_adic,
                        LEA_Tablero_kardex_adic,
                        RDJ_eficiencia,
                        RDJ_extendido,
                        XML,
                        XML_compras,
                        XML_ventas,
                        Cruce_FV_LE,
                        SIAF}, this.onEndRegistroTicket_v2Delegate, this.onRegistroTicket_v2CompletedDelegate, userState);
        }
        
        public System.DateTime Fecha_fin_ult_ticket() {
            return base.Channel.Fecha_fin_ult_ticket();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFecha_fin_ult_ticket(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFecha_fin_ult_ticket(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndFecha_fin_ult_ticket(System.IAsyncResult result) {
            return base.Channel.EndFecha_fin_ult_ticket(result);
        }
        
        private System.IAsyncResult OnBeginFecha_fin_ult_ticket(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginFecha_fin_ult_ticket(callback, asyncState);
        }
        
        private object[] OnEndFecha_fin_ult_ticket(System.IAsyncResult result) {
            System.DateTime retVal = this.EndFecha_fin_ult_ticket(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFecha_fin_ult_ticketCompleted(object state) {
            if ((this.Fecha_fin_ult_ticketCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Fecha_fin_ult_ticketCompleted(this, new Fecha_fin_ult_ticketCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Fecha_fin_ult_ticketAsync() {
            this.Fecha_fin_ult_ticketAsync(null);
        }
        
        public void Fecha_fin_ult_ticketAsync(object userState) {
            if ((this.onBeginFecha_fin_ult_ticketDelegate == null)) {
                this.onBeginFecha_fin_ult_ticketDelegate = new BeginOperationDelegate(this.OnBeginFecha_fin_ult_ticket);
            }
            if ((this.onEndFecha_fin_ult_ticketDelegate == null)) {
                this.onEndFecha_fin_ult_ticketDelegate = new EndOperationDelegate(this.OnEndFecha_fin_ult_ticket);
            }
            if ((this.onFecha_fin_ult_ticketCompletedDelegate == null)) {
                this.onFecha_fin_ult_ticketCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFecha_fin_ult_ticketCompleted);
            }
            base.InvokeAsync(this.onBeginFecha_fin_ult_ticketDelegate, null, this.onEndFecha_fin_ult_ticketDelegate, this.onFecha_fin_ult_ticketCompletedDelegate, userState);
        }
        
        public string TicketProcesando() {
            return base.Channel.TicketProcesando();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginTicketProcesando(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTicketProcesando(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndTicketProcesando(System.IAsyncResult result) {
            return base.Channel.EndTicketProcesando(result);
        }
        
        private System.IAsyncResult OnBeginTicketProcesando(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginTicketProcesando(callback, asyncState);
        }
        
        private object[] OnEndTicketProcesando(System.IAsyncResult result) {
            string retVal = this.EndTicketProcesando(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTicketProcesandoCompleted(object state) {
            if ((this.TicketProcesandoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TicketProcesandoCompleted(this, new TicketProcesandoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TicketProcesandoAsync() {
            this.TicketProcesandoAsync(null);
        }
        
        public void TicketProcesandoAsync(object userState) {
            if ((this.onBeginTicketProcesandoDelegate == null)) {
                this.onBeginTicketProcesandoDelegate = new BeginOperationDelegate(this.OnBeginTicketProcesando);
            }
            if ((this.onEndTicketProcesandoDelegate == null)) {
                this.onEndTicketProcesandoDelegate = new EndOperationDelegate(this.OnEndTicketProcesando);
            }
            if ((this.onTicketProcesandoCompletedDelegate == null)) {
                this.onTicketProcesandoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTicketProcesandoCompleted);
            }
            base.InvokeAsync(this.onBeginTicketProcesandoDelegate, null, this.onEndTicketProcesandoDelegate, this.onTicketProcesandoCompletedDelegate, userState);
        }
        
        public string NumeroTicketsProcesando() {
            return base.Channel.NumeroTicketsProcesando();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginNumeroTicketsProcesando(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNumeroTicketsProcesando(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndNumeroTicketsProcesando(System.IAsyncResult result) {
            return base.Channel.EndNumeroTicketsProcesando(result);
        }
        
        private System.IAsyncResult OnBeginNumeroTicketsProcesando(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginNumeroTicketsProcesando(callback, asyncState);
        }
        
        private object[] OnEndNumeroTicketsProcesando(System.IAsyncResult result) {
            string retVal = this.EndNumeroTicketsProcesando(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNumeroTicketsProcesandoCompleted(object state) {
            if ((this.NumeroTicketsProcesandoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NumeroTicketsProcesandoCompleted(this, new NumeroTicketsProcesandoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NumeroTicketsProcesandoAsync() {
            this.NumeroTicketsProcesandoAsync(null);
        }
        
        public void NumeroTicketsProcesandoAsync(object userState) {
            if ((this.onBeginNumeroTicketsProcesandoDelegate == null)) {
                this.onBeginNumeroTicketsProcesandoDelegate = new BeginOperationDelegate(this.OnBeginNumeroTicketsProcesando);
            }
            if ((this.onEndNumeroTicketsProcesandoDelegate == null)) {
                this.onEndNumeroTicketsProcesandoDelegate = new EndOperationDelegate(this.OnEndNumeroTicketsProcesando);
            }
            if ((this.onNumeroTicketsProcesandoCompletedDelegate == null)) {
                this.onNumeroTicketsProcesandoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNumeroTicketsProcesandoCompleted);
            }
            base.InvokeAsync(this.onBeginNumeroTicketsProcesandoDelegate, null, this.onEndNumeroTicketsProcesandoDelegate, this.onNumeroTicketsProcesandoCompletedDelegate, userState);
        }
        
        public void EditarEstado(string CodigoTicket, string Estado, System.DateTime FechaPrevista) {
            base.Channel.EditarEstado(CodigoTicket, Estado, FechaPrevista);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEditarEstado(string CodigoTicket, string Estado, System.DateTime FechaPrevista, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditarEstado(CodigoTicket, Estado, FechaPrevista, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndEditarEstado(System.IAsyncResult result) {
            base.Channel.EndEditarEstado(result);
        }
        
        private System.IAsyncResult OnBeginEditarEstado(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string CodigoTicket = ((string)(inValues[0]));
            string Estado = ((string)(inValues[1]));
            System.DateTime FechaPrevista = ((System.DateTime)(inValues[2]));
            return this.BeginEditarEstado(CodigoTicket, Estado, FechaPrevista, callback, asyncState);
        }
        
        private object[] OnEndEditarEstado(System.IAsyncResult result) {
            this.EndEditarEstado(result);
            return null;
        }
        
        private void OnEditarEstadoCompleted(object state) {
            if ((this.EditarEstadoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditarEstadoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditarEstadoAsync(string CodigoTicket, string Estado, System.DateTime FechaPrevista) {
            this.EditarEstadoAsync(CodigoTicket, Estado, FechaPrevista, null);
        }
        
        public void EditarEstadoAsync(string CodigoTicket, string Estado, System.DateTime FechaPrevista, object userState) {
            if ((this.onBeginEditarEstadoDelegate == null)) {
                this.onBeginEditarEstadoDelegate = new BeginOperationDelegate(this.OnBeginEditarEstado);
            }
            if ((this.onEndEditarEstadoDelegate == null)) {
                this.onEndEditarEstadoDelegate = new EndOperationDelegate(this.OnEndEditarEstado);
            }
            if ((this.onEditarEstadoCompletedDelegate == null)) {
                this.onEditarEstadoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditarEstadoCompleted);
            }
            base.InvokeAsync(this.onBeginEditarEstadoDelegate, new object[] {
                        CodigoTicket,
                        Estado,
                        FechaPrevista}, this.onEndEditarEstadoDelegate, this.onEditarEstadoCompletedDelegate, userState);
        }
        
        public int VerificarCodigo(string codigo) {
            return base.Channel.VerificarCodigo(codigo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginVerificarCodigo(string codigo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVerificarCodigo(codigo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndVerificarCodigo(System.IAsyncResult result) {
            return base.Channel.EndVerificarCodigo(result);
        }
        
        private System.IAsyncResult OnBeginVerificarCodigo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string codigo = ((string)(inValues[0]));
            return this.BeginVerificarCodigo(codigo, callback, asyncState);
        }
        
        private object[] OnEndVerificarCodigo(System.IAsyncResult result) {
            int retVal = this.EndVerificarCodigo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnVerificarCodigoCompleted(object state) {
            if ((this.VerificarCodigoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VerificarCodigoCompleted(this, new VerificarCodigoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VerificarCodigoAsync(string codigo) {
            this.VerificarCodigoAsync(codigo, null);
        }
        
        public void VerificarCodigoAsync(string codigo, object userState) {
            if ((this.onBeginVerificarCodigoDelegate == null)) {
                this.onBeginVerificarCodigoDelegate = new BeginOperationDelegate(this.OnBeginVerificarCodigo);
            }
            if ((this.onEndVerificarCodigoDelegate == null)) {
                this.onEndVerificarCodigoDelegate = new EndOperationDelegate(this.OnEndVerificarCodigo);
            }
            if ((this.onVerificarCodigoCompletedDelegate == null)) {
                this.onVerificarCodigoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVerificarCodigoCompleted);
            }
            base.InvokeAsync(this.onBeginVerificarCodigoDelegate, new object[] {
                        codigo}, this.onEndVerificarCodigoDelegate, this.onVerificarCodigoCompletedDelegate, userState);
        }
    }
}
